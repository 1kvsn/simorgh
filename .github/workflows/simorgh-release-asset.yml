name: Simorgh CI - Automatic Release
on:
  push:
    branches:
      - latest
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    env:
      CI: true
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get New Release TagName
        id: newReleaseTagName
        run: |
          JSON_RESPONSE=$(curl \
          -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          -H 'Accept: application/vnd.github+json' \
          -H 'X-GitHub-Api-Version: 2022-11-28' \
          https://api.github.com/repos/${{ github.repository }}/releases/latest \
          --fail \
          | jq -r '.tag_name' \
          | awk 'BEGIN{FS=OFS="."} {$2+=1} 1')
          echo $JSON_RESPONSE
          echo "NEW_RELEASE_TAG_NAME=$JSON_RESPONSE" >> $GITHUB_OUTPUT

      - name: Get New Release Commit Message
        id: newReleaseMessage
        run: |
          NEW_RELEASE_MESSSAGE=$(curl \
          -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          -H 'Accept: application/vnd.github+json' \
          -H 'X-GitHub-Api-Version: 2022-11-28' \
          https://api.github.com/repos/${{ github.repository }}/commits/latest \
          --fail \
          | jq -r '.commit.message' \
          | sed 's/#[0-9]\{1,\}/\<a href="https:\/\/github.com\/bbc\/simorgh\/pull\/10668\"\>&\<\/a\>/' \
          | sed -e 's/%/%25/g' -e 's/ /%20/g' -e 's/!/%21/g' -e 's/"/%22/g' -e "s/'/%27/g" -e 's/#/%23/g' -e 's/(/%28/g' -e 's/)/%29/g' -e 's/+/%2b/g' -e 's/,/%2c/g' -e 's/-/%2d/g' -e 's/:/%3a/g' -e 's/;/%3b/g' -e 's/?/%3f/g' -e 's/@/%40/g' -e 's/\$/%24/g' -e 's/\&/%26/g' -e 's/\*/%2a/g' -e 's/\./%2e/g' -e 's/\//%2f/g' -e 's/\[/%5b/g' -e 's/\\/%5c/g' -e 's/\]/%5d/g' -e 's/\^/%5e/g' -e 's/_/%5f/g' -e 's/`/%60/g' -e 's/{/%7b/g' -e 's/|/%7c/g' -e 's/}/%7d/g' -e 's/~/%7e/g' \
          )
          
          echo $NEW_RELEASE_MESSSAGE
          echo "NEW_RELEASE_MESSSAGE=$NEW_RELEASE_MESSSAGE" >> $GITHUB_OUTPUT

      - name: Publish 
        run: |
          curl \
          -X POST \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/releases \
          -d '{
            "tag_name": "${{ steps.newReleaseTagName.outputs.NEW_RELEASE_TAG_NAME }}", 
            "target_commitish": "latest", 
            "name": "Release ${{ steps.newReleaseTagName.outputs.NEW_RELEASE_TAG_NAME }}", 
            "body": "${{ steps.newReleaseMessage.outputs.NEW_RELEASE_MESSSAGE }}",
            "draft": false,
            "prerelease": false,
            "generate_release_notes": false
          }' \
          --fail
